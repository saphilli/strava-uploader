name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: false
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Build project
      run: npm run build
      
    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: dist
        key: build-${{ runner.os }}-${{ github.sha }}
        
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    if: false
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Restore build artifacts
      uses: actions/cache@v4
      with:
        path: dist
        key: build-${{ runner.os }}-${{ github.sha }}
        
    - name: Run tests
      run: npm run test
      env:
        NODE_OPTIONS: --max-old-space-size=4096
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          coverage/
          test-results.xml
        retention-days: 7
        
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run dependency check
      run: npx audit-ci --moderate

  build-google-function:
    name: Build Google Function
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: functions/gmail-listener/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: functions/gmail-listener
      
    - name: Build Google Function
      run: npm run build
      working-directory: functions/gmail-listener

  security-scan-google-function:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      working-directory: functions/gmail-listener

    - name: Run security audit
      run: npm audit --audit-level=moderate
      working-directory: functions/gmail-listener
      
    - name: Run dependency check
      run: npx audit-ci --moderate
      working-directory: functions/gmail-listener
